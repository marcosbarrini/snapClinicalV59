class ConnioCore{constructor(){this.config={BaseURL:null,App:null,KEY:null,Secret:null,MQTTHost:null,MQTTPort:null,MQTTCientID:null,MQTTUsername:null,MQTTPassword:null,MQTTTopic:null}}configure(i){let o;if(i)o=JSON.parse(i);else if(!this.config.BaseURL){let i=Creator.currentProject.serviceModel.getServiceObject("Connio");o=i.attributes.attrs}o&&(this.config.BaseURL=o.api.url,this.config.App=o.api.app,this.config.KEY=o.api.key,this.config.Secret=o.api.secret,this.config.MQTTHost=o.mqtt.host,this.config.MQTTPort=Number(o.mqtt.port),this.config.MQTTCientID=o.mqtt.clientId,this.config.MQTTUsername=o.mqtt.username,this.config.MQTTPassword=o.mqtt.password,this.config.MQTTTopic="connio/apps/"+this.config.App+"/devices/#")}connioConfigure(i,o,t){this.configure(),this.config.KEY=i,this.config.Secret=o}connioGetDeviceProfiles(i){this.configure();let o=this.config.BaseURL+"/v2/deviceprofiles";$.ajax({url:o,type:"GET",headers:{Authorization:"Basic "+btoa(this.config.KEY+":"+this.config.Secret)},success:o=>{i(o)},error:(i,o,t)=>{console.log("Could not get the profiles. Could be network error")}})}connioGetDevices(i,o){this.configure();let t=this.config.BaseURL+"/v2/devices?profile="+i;$.ajax({url:t,type:"GET",headers:{Authorization:"Basic "+btoa(this.config.KEY+":"+this.config.Secret)},success:i=>{o(i)},error:(i,o,t)=>{console.log("Could not get the devices.")}})}connioGetProperties(i,o){this.configure();let t=this.config.BaseURL+"/v2/deviceprofiles/"+i+"/properties";$.ajax({url:t,type:"GET",headers:{Authorization:"Basic "+btoa(this.config.KEY+":"+this.config.Secret)},success:i=>{o(i)},error:(i,o,t)=>{console.log("Could not get the properties.")}})}}var com=com||{};com.fc=com.fc||{},com.fc.JavaScriptDistLib=com.fc.JavaScriptDistLib||{},com.fc.JavaScriptDistLib.ConnioCore=ConnioCore;
//# sourceMappingURL=DistLibLegacy.js.map